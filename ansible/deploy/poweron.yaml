---
#
# Shutdown all nodes
#

- hosts: master:worker
  gather_facts: no
  vars_files:
  - secrets.yaml

  tasks:

#
# Get an Admin Token to query the switch
#
  - name: login netgear switch
    delegate_to: localhost
    run_once: True
    command: ntgrrc login --address={{ netgear_switch }} --password {{ netgear_admin_password }}
    register: result
    changed_when: False
    failed_when: False

  - fail:
    when: result.rc != 0 and
          'login request returned 200 OK' not in result.stdout

#
# Retrieve Port settings/Status
#
  - name: query netgear switch
    delegate_to: localhost
    command:  ntgrrc port settings --address={{ netgear_switch }} --output-format json
    changed_when: False
    register: result

#
# Make sure I do not power on the wrong device(s)
#
  - name: Port in the switch must have the same name as the host in the inventory
    delegate_to: localhost
    vars:
      json_data:  "{{ result.stdout | from_json  }}"
      port_name:  "{{ json_data.port_settings[switch_port - 1]['Port Name'] }}"
    fail:
    when: port_name != inventory_hostname

#
# Stop providing power to switch port
#
  - name: Get POE Power Status
    delegate_to: localhost
    changed_when: False
    command: ntgrrc poe status --address={{ netgear_switch }} --output-format json
    register: result

  - name: Power On port 
    delegate_to: localhost
    vars:
      json_data: "{{ result.stdout | from_json  }}"
      port_name: "{{ json_data.poe_status[switch_port - 1]['Port Name'] }}"
      power_status: "{{ json_data.poe_status[switch_port - 1]['Status'] }}"
    command: ntgrrc poe set --power enable --port={{ switch_port }} --address={{ netgear_switch }}
    when: power_status == "Disabled"
    register: res

