---
#
# Poweroff POE switch ports
#

#
# Collect port status data from the switch
#
- name: query netgear switch
  delegate_to: localhost
  run_once: true
  command:  ntgrrc port settings --address={{ netgear_switch }} --output-format json
  changed_when: False
  register: result

#
# make sure port name matches inventory hostname
#
- name: Port in the switch must have the same name as the host in the inventory
  delegate_to: localhost
  vars:
    json_data:  "{{ result.stdout | from_json  }}"
    port_name:  "{{ json_data.port_settings[switch_port - 1]['Port Name'] }}"
  fail:
  when: port_name != inventory_hostname

#
# Make sure the device is fully shutdown (it may take some time before a shutdown fully completes)
#
- name: Wait for Port to become available 
  delegate_to: localhost
  changed_when: False
  vars:
    json_data: "{{ result.stdout | from_json  }}"
    query: 'port_settings[{{ switch_port - 1 }}]."Port Status"'
    port_status: "{{ json_data | json_query(query) }}"
  command: ntgrrc port settings --address={{ netgear_switch }} --output-format json
  register: result
  until:  port_status == "AVAILABLE"
  delay: 10
  retries: 20

#
# Stop providing power to switch port
#
- name: Get POE Power Status
  delegate_to: localhost
  changed_when: False
  run_once: true
  command: ntgrrc poe status --address={{ netgear_switch }} --output-format json
  register: result

- name: Power Off port 
  delegate_to: localhost
  vars:
    json_data: "{{ result.stdout | from_json  }}"
    port_name: "{{ json_data.poe_status[switch_port - 1]['Port Name'] }}"
    power_status: "{{ json_data.poe_status[switch_port - 1]['Status'] }}"
  command: ntgrrc poe set --power disable --port={{ switch_port }} --address={{ netgear_switch }}
  when: power_status != "Disabled"
  register: res

